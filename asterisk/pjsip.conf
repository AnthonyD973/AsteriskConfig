[transport-udp-nat]
type = transport
; Only accept UDP for now
protocol = udp
; Accept TCP/UDP connections on port @PJSIP_PORT@ from any address.
bind = 0.0.0.0:@PJSIP_PORT@
; Which addresses are considered inside the NAT
local_net = 10.0.0.0/8
local_net = 172.16.0.0/12
local_net = 192.168.0.0/24
local_net = 127.0.0.1/32
; RTP and SIP address/domain name to use as our IP if the
; endpoint we are communicating to is not within our NAT.
external_media_address = @DOMAIN_NAME@
external_signaling_address = @DOMAIN_NAME@

; =============================================================================
; =                                    TRUNK                                  =
; =============================================================================

[voipms]
type = registration
transport = transport-udp-nat
outbound_auth = voipms
client_uri = sip:@VOIPMS_USERNAME@@@VOIPMS_SERVER@:@VOIPMS_SERVER_PORT@
server_uri = sip:@VOIPMS_SERVER@:@VOIPMS_SERVER_PORT@

[voipms]
type = auth
auth_type = userpass
username = @VOIPMS_USERNAME@
password = @VOIPMS_PASSWORD@

[voipms]
type = aor
contact = sip:@VOIPMS_USERNAME@@@VOIPMS_SERVER@

[voipms]
type = endpoint
transport = transport-udp-nat
context = voipms-inbound
disallow = all
allow = gsm,ulaw,alaw
from_user = @VOIPMS_USERNAME@
outbound_auth = voipms
aors = voipms
send_rpid = yes

; NAT parameters:

; Send RTP packets to the IP and port we received them from. Also
; means we can't send RTP packets until we've received some.
rtp_symmetric = yes
; Send SIP requests to the IP and port of the packet
; we got the register from, rather than the data provided
; by the SDP of the register?
rewrite_contact = yes

[voipms]
type = identify
endpoint = voipms
match = @VOIPMS_SERVER@

; =============================================================================
; =                                    DEVICES                                =
; =============================================================================

[device-aor](!)
type = aor
max_contacts = 1
; Remove contact if a new one tries to connect.
remove_existing = yes
; Make sure peer is still there every N seconds.
; Also keeps the peer's NAT open if the peer is behind NAT
qualify_frequency = @ENDPOINT_QUALIFY_FREQUENCY@

[device-endpoint](!)
type = endpoint
context = phones
allow = gsm,ulaw,alaw
transport = transport-udp-nat
; Send RTP packets to the IP and port we received them from. Also
; means we can't send RTP packets until we've received some.
; For some reason, not adding this causes Asterisk not to send
; any RTP packet at all, not even to the wrong address.
rtp_symmetric = yes
; Send SIP requests to the IP and port of the packet
; we got the register from, rather than the data provided
; by the SDP of the register?
rewrite_contact = yes
; Prevent re-invites for direct media since some endpoints might be
; behind the same NAT. The re-invite would cause them to send the RTP
; packets to their own public IP address, which many routers do not
; support.
direct_media = no
allow_subscribe = yes
subscribe_context = phones
mailboxes = @MAIN_EXTEN@@default

; -----------------------

[linux](device-aor)

[linux]
type = auth
username = linux
password = @ENDPOINT1_PASSWORD@

[linux](device-endpoint)
aors = linux
auth = linux
outbound_auth = linux

; -----------------------

[home-phone](device-aor)

[home-phone]
type = auth
username = home-phone
password = @ENDPOINT2_PASSWORD@

[home-phone](device-endpoint)
aors = home-phone
auth = home-phone
outbound_auth = home-phone

; -----------------------

[work-computer1](device-aor)

[work-computer1]
type = auth
username = work-computer1
password = @ENDPOINT3_PASSWORD@

[work-computer1](device-endpoint)
aors = work-computer1
auth = work-computer1
outbound_auth = work-computer1

; -----------------------

[tablet](device-aor)

[tablet]
type = auth
username = tablet
password = @ENDPOINT4_PASSWORD@

[tablet](device-endpoint)
aors = tablet
auth = tablet
outbound_auth = tablet

; -----------------------

[cell-phone](device-aor)

[cell-phone]
type = auth
username = cell-phone
password = @ENDPOINT5_PASSWORD@

[cell-phone](device-endpoint)
aors = cell-phone
auth = cell-phone
outbound_auth = cell-phone
